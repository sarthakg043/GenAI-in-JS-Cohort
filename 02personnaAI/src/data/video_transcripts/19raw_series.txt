हां जी कैसे हैं आप सभी स्वागत है आप सभी का चाय और कोड के एक और नए रॉ वीडियो के अंदर रॉ टेक सिस्टम डिजाइन के ऊपर तो हां जी आज हम क्या करेंगे सिस्टम डिजाइन पढ़ेंगे या फिर आपको बेस्ट रिसोर्सेस बताऊंगा सिस्टम डिजाइन पढ़ने के या फिर रोड मैप बताऊंगा नहीं इनमें से कुछ भी नहीं बताऊंगा सिस्टम डिजाइन ना आज की डेट में एक छोटी सी रेस बन गई है यह दिखाने की कि कौन ज्यादा सुपीरियर है सुपीरियोर रेस बज चुका है हर कोई यह बताना चाहता है कि मैंने बेहतर सिस्टम डिजाइन करे हैं मैंने और ज्यादा बड़े सिस्टम डिजाइन करे हैं हम उस चीज पर बात नहीं करेंगे कि किसने कितने बेहतर सिस्टम डिजाइन करे हैं या फिर मैंने कितने सिस्टम डिजाइन करे हैं उस रेस में जाने का कोई सेंस ही नहीं है यह जो वीडियो है यह उन बिगिनर्स उन फ्रेशर्स के लिए है जो देखना चाहते हैं कि सिस्टम डिजाइन होता क्या है किस तरह से एक्सप्लोर किया जाना चाहिए और क्या एक अप्रोच रहती है कि आप अगर एक्सप्लोर करना चाहते हैं तो कैसे उसको माइंडसेट को रखें बस इसी के बारे में एक छोटा सा रॉ टेक है और सबसे पहली बात कि रॉ टेक आया कहां से दिमाग में तो एक छोटा सा ट्वीट है टोबी का जो लोग टोबी को नहीं जानते टोबी बहुत ही ज्यादा इंडस्ट्री वेटरन में से एक है तो उन्हीं के बारे में उनका एक छोटा सा ट्वीट आया था ये संडे रेंट तो मैंने इसको बुकमार्क कर लिया मैंने सोचा इसको डिस्कस किया जाएगा आप ही देख ही सकते हैं टोबी के क्रेडेंशियल बहुत हैवी हैं शफाई सीईओ तो ओबवियस सी बात है इतना बड़ा सिस्टम इतना बड़ा स्केल है तो यहां पे जो इनका एक टेक है ना उससे मैं कहीं ना कहीं बहुत ज्यादा एग्री करता हूं जो कि है फॉर सॉफ्टवेयर इंजीनियर रिंग माय सेंस इज दैट फेज अ माय सेंस इज दैट द फ्रेज प्रीमेच्योर ऑप्टिमाइजेशन इज द रूट ऑफ ऑल इवल सिर्फ इसी लाइन पे हम डिस्कस करेंगे पूरे ट्वीट प नहीं जाएंगे कि प्रीमेच्योर ऑप्टिमाइजेशन क्या है कैसे है और क्यों इससे आपको देखना चाहिए और कैसे आप इससे हेल्प ले सकते हो अब देखिए सीधी सी बात है मैं बहुत बड़ा एक बिलीवर हूं कि कोई भी टॉपिक है कोई भी चीज है उसको आप सीख सकते हो कुछ भी सीखा जा सकता है आपको डूडलिंग सीखना है चाहे कोडिंग सीखना है आपको चाहे पेंटिंग सीखना है या कुछ भी सीखना है सब कुछ सीखा जा सकता है सीखने के कुछ तरीके होते हैं एक तरीका होता है कि आप अन फॉर्मल लर्निंग लेते हो अ जहां पे आपको टाइम लगता है थोड़ा सा लेकिन आप सीख ही जाते हो इसको बोलते हैं कि आप लर्न बाय डूइंग आप थोड़ा-थोड़ा कुछ करते रहते हो अपने हिसाब से गलतियां करते हो अपने हिसाब से सीख लेते हो वो भी एक तरीका है और इसके अंदर थोड़ा सा इवॉल्वमेंट कई बार जब आप कंपनियों में काम करते हो तो सीनियर्स के साथ इंटरेक्शन का थोड़ा सा आपके पास एडवांटेज आ जाता है कि सीनियर्स के साथ काम किया उन्होंने थोड़ी बहुत चाय पे या कहीं पे चर्चा में कुछ एक्सपीरियंस शेयर कर दे कि पता है हमने उस कंपनी में काम किया था वहां ऐसे यह खराब काम हो गया था यह फट गया था इस तरह से चीजें सही करी फिर हमने वो एक्सपीरियंस आपके पास आ जाता है और एक अप्रोच होती है किसी भी चीज को सीखने की फॉर्मल अप्रोच जहां पे आप कोई यूनिवर्सिटी डिग्री लेते हो कोई प्रोफेशनल कोर्स लेते हो यूमी से बाय करते हो प्राइवेट ऑर्गेनाइजेशन इंडिविजुअल टीचर कहीं से बाय करते हो वहां पे आप चाहे बाय कर रहे हो चाहे youtube2 बैक और अगर उसके ऊपर आपको इंटरेक्शन मिल जाए तो और फास्ट पेस हो जा जाती है लर्निंग सीख तो जाते ही है जिनको सीखना होता है चाहे वो एक स्ट्रक्चर्ड पाथ में टाइम बचा के सीखें चाहे वो नॉन स्ट्रक्चर्ड पाथ से सीखें सीख सभी जाते हैं उसमें कोई ज्यादा बड़ी बात है नहीं लेकिन सिस्टम डिजाइन एक ऐसी चीज है ना जिस पे अभी मैं देखता हूं तो आजकल थोड़ा सा रेस एक चल रही है कि देखिए मैंने बेस्ट सिस्टम डिजाइन है इसलिए मैं आपको बेस्ट पढ़ा दूंगा ठीक है उनका अपना टेक है हमें उस टेक में जाना भी नहीं है एक बिगनर जब सिस्टम डिजाइन के बारे में सोचता है ना तो बड़ा ही कंफ्यूज हो जाता है कि यार सिस्टम डिजाइन कैसे करूं मैं सिस्टम डिजाइन और फिर आपको कुछ टेंप्लेट सिस्टम्स जो कि पूछे भी जाते हैं इंटरव्यू में कि पार्किंग सिस्टम कैसे डिजाइन करो instagram's को बनाना शुरू करते करते हो अब बिना सिस्टम डिजाइन के सिस्टम कैसे बना देंगे देखिए जब आप एक टू डू भी बनाते हो ना वो भी एक सिस्टम डिजाइन के तहत ही बनता है टू डू में क्या फीचर्स होंगे क्या फंक्शनैलिटी होगी कितने यूजर्स को दिमाग में लेके मैं चल रहा हूं अभी कि इस टड को कॉन्करेंटली 10 लोग यूज़ कर पाएंगे या हजार लोग यूज़ कर पाएंगे अ अगर मान लीजिए मेरा डेटाबेस फिल अप हो गया या फिर उसके अंदर और कंस्ट्रेंट मुझ डालने है तो मैं कितना फ्लेक्सिबल स्कीमा है कि इसके मैं अंदर फीचर्स डाल पाऊंगा और टेबल्स डाल पाऊंगा या फिर अगर नो सीक्वल ले रहा हूं तो क्या सोच के मैं ले रहा हूं ये सारी चीजें ना आप इवेंचर करते हो जब आप प्रोजेक्ट्स बनाते हो और आजकल क्या है कि हम प्रोजेक्ट्स बनाते तो हैं बट वो प्रोजेक्ट्स इस अ माइंडसेट से नहीं बनाते हैं कि इनको कोई यूज करेगा हमें सिर्फ youtube0 10 लोग जब यूज़ करते हैं तब आपको एक्चुअली में पता लगता है कि सही मायने में बॉटल नेक है क्या कहां पे हमें परफॉर्मेंस में इशू आ रहा है कहां पे मैंने फ्रंट एंड का जावास्क्रिप्ट कोड हैवी लिख दिया है इसको थोड़ा लाइट वेट किया जा सकता है या क यहां पे मुझे सर्वर साइड रेंडरिंग की एक्चुअली में भी जरूरत है नहीं है या फिर डेटाबेस चॉइस क्यों यह वाला सही था क्यों यह वाला खराब था क्योंकि सिस्टम डिजाइन में ना सबसे अमेजिंग बात यह है कि इसमें कुछ सही और गलत नहीं है यहां पे जो वर्क कर गया बस वही सही है अगर सिस्टम डिजाइन में कोई डिजाइंड पाथ होता कि इसी तरह से ही जाना है तो देखिए बहुत सारी कंपनिया ऑलरेडी आगे निकल चुकी है डिस्को बहुत आगे निकल चुका है है जो सिचुएशन है वह शायद आप कभी फेस ही नहीं करोगे आपकी सिचुएशन आपकी प्रॉब्लम्स हमेशा अलग होगी तो सिस्टम डिजाइन का एस सच कोई पात है ही नहीं कि आप कर सकते हो जैसे-जैसे किसी ने कोई प्रॉब्लम फेस करी तो उस प्रॉब्लम को सॉल्व करने के लिए उन्होंने कभी डेटाबेस माइग्रेशन करा कभी उन्होंने टेक्स टैक चेंज करा या हो सकता है कभी उन्होंने नेटवर्क कॉल्स के ऊपर काम करा कि कैसे हम काम कर सकते कैसे ऑप्टिमाइज कर सकते हैं और इन्हीं सब के दौरान ना नई चीजें इन्वेंट होती रहती है जैसे रेस्ट के बाद ग्राफ क्यूएल आया अ कुछ लोग जीआरपीसी ज्यादा पसंद करते हैं या आरपीसी मॉडल को ही ज्यादा पसंद करते हैं तो उन्होंने कुछ ना कुछ बॉटल नेक देखा आपकी सिचुएशन के लिए कौन सी चीज अप्लाई होती है ये डिपेंड करेगा जब आपके पास यूजर आएंगे इसीलिए तो जब र्ड के आप ब्लॉग्स पढ़ते हो या इंजीनियरिंग ब्लॉग्स पढ़ते हो किसी भी के भी हैश नोड के अ आप किसी के भी पढ़ते हैं तो वहां पे आप देखते हैं कि उनके पास एक स्पेशल यूज केस था जहां पे कोई एसिस्टिंग सॉल्यूशन फिट नहीं बैठ रहा था एक आपको छोटा सा किस्सा बताता हूं कि इनर डिटेल्स में तो नहीं जाऊंगा अ बात करनी पड़ेगी मुझे हैश नोड के फाउंडर से बट हां एक केस था जहां पे हैश नोड का जो पूरा सेटअप था इंफ्रा था वहां पर एक स्पेशल यूज केस था जो वासल सर्व नहीं कर पा रहा था और वो सिस्टम डिजाइन में एजिस्ट ही नहीं करता था वसल के अब आप कहेंगे वासल के पास तो इतने अच्छे इंजीनियर है उन्होंने ये क्यों नहीं सोचा नहीं सोचते कोई नहीं सोचते हैं क्योंकि चीजें ऑन द गो ही बिल्ड होती है ऑन द गो ही होती है फिर वसल ने समझा कि हां हैश नोड को इस फीचर की रिक्वायरमेंट है चलिए इसको डिजाइन करते हैं फिर उन्होंने इसको डिजाइन करा इंप्लीमेंट करा और फिर हैश नोड को प्रोवाइड करा तो कहने का मतलब यह है इस पूरी स्टोरी से कि देखिए सिस्टम डिजाइन आप जहां से भी सीख रहे हैं जैसे भी सीख रहे हैं वो ठीक ही है उसमें कोई दिक्कत नहीं है आपका फोकस अभी इस चीज पे रखिए कि मुझे कुछ ऐसा बिल्ड करना है एक प्रोजेक्ट हो दो प्रोजेक्ट हो जिसको लोग यूज कर पाएं और किसी तरह से मुझे वापस से फीडबैक दे पाए अब फीडबैक में आपके पास चीज आएगी कि मैं लॉगइन नहीं कर पा रहा हूं लॉगइन में टाइम लग रहा है या फिर आपको उसको सैस में कन्वर्ट करना है तब आपको पता लगेगा कि कहां सीक्वल कहां नो सीक्वल इस तरह से बस आंख बंद करके रट्टा मारने से से काम नहीं चलेगा कि रेट लिमिटड लगा दो लोड बैलेंसर लगा दो क्यों लगा दो लोड बैलेंसर हो सकता है आपको लोड बैलेंसर की जरूरत ही ना हो आपके पास हो सकता है बीसी यूजर आ रहे हैं 20 यूजर में लोड बैलेंसर लगा के क्या करोगे या सपोज करिए आपके पास 100 यूजर आ रहे हैं या 1000 यूजर आ रहे हैं आपको एक मशीन चाहिए बस वो मशीन सीधा स्केल कर देगी और दैट्ची जरूरत ही नहीं है क्योंकि आप उस यूजर बेस तक उस प्रॉब्लम तक पहुंचे ही नहीं हो ज्यादातर काम आप कोई भी एक टेक्स्ट स्टैक चूज कर लीजिए नेक्स्ट यस चूज कर लीजिए रूबी ऑन रेल्स लरावेल जो भी चूज करेंगे एक डे भी चूज कर लीजिए चाहे मंगो हो चाहे माय सीक्वल हो चाहे पोस्टग्रेस हो आपका प्रोजेक्ट कभी उस स्केल को पार ही नहीं करके गया है पर इसका मतलब यह भी नहीं है ना कि हम पढ़ भी नहीं सकते तो इसलिए मैं कहता हूं कि सिस्टम डिजाइन के पीछे वॉर नहीं होनी चाहिए सिस्टम डिजाइन के पीछे केस स्टडीज होनी चाहिए इनको इस तरह से नहीं देखना चाहिए कि मैं सुपीरियर या आप सुपीरियर इनको देखना चाहिए कि इंजीनियरिंग सॉल्यूशंस हैं इंजीनियरिंग सॉल्यूशंस के पर्सपेक्टिव से जब आप देखोगे तब आपको दिखाई देगा कि लोगों ने कितना स्मार्ट वर्क कराया और किस वजह से किया है कभी भी कोई भी सिस्टम डिजाइन का टेंप्लेट आप कॉपी करके पेस्ट नहीं कर सकते किसी भी अब देखिए यहां पे दो तरह के भी लोग आते हैं एक जिन्होंने इवेंचर करा है एक जिन्होंने हाई एंड कॉर्पोरेट से ग्रो करा है जब आप हाई एंड कॉर्पोरेट से ग्रो करते हैं जैसे कि बड़ी-बड़ी कंपनियां है जैसे jio1 पे जब फीचर लॉन्च होगा तो 2 मिलियन 5 मिलियन 10 मिलियन लोग इसको यूज पोटेंशियली कर सकते हैं तो वहां पे उनको डे वन से एटलीस्ट 5 मिलियन यूजर का सोचना पड़ता है तो वो जो लर्निंग कर्व है वहां पे एक्सपीरियंस लोग होते हैं उनके साथ जो लोग सीखते हैं वो उस लेवल से उस माइंडसेट से सीखते हैं आपने अगर स्टार्टअप के अंदर सीखा है तो स्टार्टअप के पास पैसे तो ज्यादा होते नहीं है वो इवेंचर ग्रोथ पे सीखते हैं कि हम बेयर मिनिमम अभी स्टैंड कर लेते हैं अपने स्ट्रक्चर को पूरे इंफ्रा को उसके बाद जैसे-जैसे यूजर आएंगे तो हम देखेंगे किस तरह से स्केल करना है अभी जो बेस्ट मिल रहा है उसी से काम करते हैं तो इस तरह से माइंडसेट भी दो डिफरेंट है इसलिए थोड़ा सा वॉर भी हो जाता है कई बार कि नहीं आपको बड़ा ही स्केल करना है सीधा और कुछ लोग कहते हैं नहीं नहीं इवेंचर ग्रोथ लेते हैं और इसीलिए इसीलिए यह जो ट्वीट है यहां पे यह अब आपको थोड़ा सा समझ में आएगा कि जो इन्होंने यहां पे कहा है कि प्रीमेच्योर ऑप्टिमाइजेशन इज द रूट ऑफ ऑल इवल यह अक्सर मैंने भी देखा है कि जब लोग एक हाई एंड कंपनियों से आते हैं उनको क्या है हर चीज ऑप्टिमाइज चाहिए हर चीज बेस्ट चाहिए लेकिन जब शफाई का सीईओ भी ये कह रहा है और मैं उससे 100% एग्री करता हूं कि कई बार जब लोग सिम बनाते हैं उसको प्री मैच्योर ही ऑप्टिमाइज कर देते हैं हो सकता है आपको उस चीज की जरूरत ही ना हो आपके पास उतना यूजर बेस ही नहीं आया आपने बस उसको एक एज केस मान के या फिर आपने उसको यूज केस मान के बस इंप्लीमेंट कर दिया है उस इंप्लीमेंट से जो कॉस्ट होती है ना वो बहुत ज्यादा हैपर करती है पूरे बिजनेस को आपको उसके हाई एंड इंजीनियर्स भी चाहिए हाई एंड सॉल्यूशंस भी चाहिए एक्सपेंसिव सर्विसेस भी चाहिए और हो सकता है उसको यूज ही नहीं कर रहे हो कोई लोग या फिर वो यूज केस बना ही नहीं है तो कई बार यह जो प्रीमेच्योर ऑप्टिमाइजेशन होता है ना यह सबसे बड़ा इवल है सिस्टम डिजाइन का आप किसी भी सीनियर सॉफ्टवेयर इंजीनियर के साथ बैठेंगे या सीनियर हाई पोस्ट वालों के साथ बैठेंगे तो वो हमेशा यही कहेंगे कि यार कई बार इंजीनियर्स ना बहुत ओवर ऑप्टिमाइज कर देते हैं डिलीवरी में डिले होता है इंजीनियर अपना काम ठीक कर रहे हैं वहां पे क्योंकि उनको लगता है यार कहीं से भी नहीं फटना चाहिए बट कई बार बिजनेस केस सेंस नहीं बनाता है कई बार वी आर रेडी कि ठीक है अगर क्रैश होता है यहां पे तो वी आर रेडी टू हैंडल दैट काइंड ऑफ अ क्रैश अब आप कहेंगे सर क्रैश कौन हैंडल करता है नहीं यही माइंडसेट डिफरेंस है अग्रेसिव ग्रोथ वाले जो स्टार्टअप वालों के लोग हैं वर्सेस मा m फिर जाने की अभी जरूरत ही नहीं है क्योंकि जब तक आप उस केस को समझोगे ही नहीं कि मुझे क्यों जरूरत है इसकी हो सकता है आपके लिए वो यूज केस है ही नहीं बहुत सारे तो ऐसे भी केसेस हैं जहां पे आपने जबरदस्ती का लोड बैलेंसर कंटेनराइजेशन कुबर टी जो वर्ड आया सब हमने टिका दिया वहां पे बट हो सकता है हमें जरूरत ही नहीं थी उसकी हां उन चीजों के बारे में ना पता होना वो भी खराब बात है पता होना चाहिए बट हमें ये भी पता होना चाहिए कि कब उनको अवॉइड कर सकते हैं हम तो बस यही है सिस्टम डिजाइन अच्छी चीज है सीखिए जहां से भी सीखिए बट हां थोड़ा सा युद्ध नहीं होना चाहिए कि मुझे ज्यादा अच्छा था या मुझे जहां से जो मिल रहा है वहां से पढ़ लो सब अच्छा ही तो पढ़ा रहे हैं ठीक है चलिए सोचा आपसे एक छोटी सी रॉ चर्चा कर ली जाए सिस्टम डिजाइन के बारे में और भी करेंगे इस तरह के और केसेस और केस स्टडीज वगैरह को वैसे मैं इंग्लिश चैनल पे भी पढ़ता रहता हूं अब हिंदी में भी हम स्टार्ट करेंगे ताकि ऐसी केस स्टडीज जो हमारे भी जो केस स्टडीज चलती रहती है इस तरह की तो उन पे भी हम चर्चाएं करते रहे एक वैसे एसएसएल की केस स्टडी रखी है जिस पे amazononline.in और सब्सक्राइब नहीं किया है तो सब्सक्राइब कर लेना वीडियो का ज्यादा बड़ा कमेंट टारगेट नहीं है सिर्फ 200 कमेंट्स का है फटाफट से कंप्लीट कर देना और मिलते हैं आपसे अगले वीडियो के अंदर